heat_template_version: 2018-03-02

description: Simple template to deploy a single compute instance with hardcoded values

parameters:
  external_network:
    type: string
    description: This is the external network that has to exist
    label: external network
    default: "public"
  image_name:
    type: string
    description: This is the image to be used for the guest instance
    label: image name
    default: "rhel76"
  dns_nameservers:
    type: string
    description: DNS nameservers to be used
    label: dns nameservers
    default: "10.12.32.1"
resources:
  simple_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Simple Security group"
      name: "simple_secgroup"
  ssh_rule:
    type: OS::Neutron::SecurityGroupRule
    properties:
      description: "SSH Rule"
      direction: "ingress"
      ethertype: "IPv4"
      protocol: "tcp"
      port_range_min: "22"
      port_range_max: "22"
      remote_ip_prefix: "0.0.0.0/0"
      security_group: { get_resource: simple_secgroup }
  m1.small:
    type: OS::Nova::Flavor
    properties:
      ram: 16384
      vcpus: 2
      disk: 10
      is_public: True
  internal_net:
    type: OS::Neutron::Net
  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: internal_net }
      cidr: "192.168.100.0/24"
      dns_nameservers: [ { get_param: dns_nameservers } ]
      ip_version: 4
  internal_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: { get_param: external_network } }
  internal_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: internal_router }
      subnet: { get_resource: internal_subnet }
  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: { get_param: external_network }
  bootable_volume:
    type: OS::Cinder::Volume
    properties:
      size: 10
      image: { get_param: image_name }
  simple_key:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: simple_key
  my_instance:
    type: OS::Nova::Server
    properties:
      key_name: { get_resource: simple_key }
      image: rhel76
      flavor: { get_resource: m1.small }
      networks:
        - network: { get_resource: internal_net }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: bootable_volume }
          delete_on_termination: false
      security_groups:
        - { get_resource: simple_secgroup }
  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: my_instance }

outputs:
  private_key:
    description: Private Key
    value: { get_attr: [ simple_key, private_key ] }
